From ffe3090bcfdf73a4b35b2e53dc38db7473fe8dc0 Mon Sep 17 00:00:00 2001
From: Sandro <devel@penguinpee.nl>
Date: Fri, 14 Mar 2025 13:39:09 +0100
Subject: [PATCH] Drop namespace std

Solve build error when compiling with GCC 15.
---
 tools/python/src/sequence_segmenter.cpp | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/tools/python/src/sequence_segmenter.cpp b/tools/python/src/sequence_segmenter.cpp
index 9fde1e771d..d6959911c2 100644
--- a/tools/python/src/sequence_segmenter.cpp
+++ b/tools/python/src/sequence_segmenter.cpp
@@ -1,13 +1,13 @@
 // Copyright (C) 2013  Davis E. King (davis@dlib.net)
 // License: Boost Software License   See LICENSE.txt for the full license.
 
+#include <string>
 #include "opaque_types.h"
 #include <dlib/python.h>
 #include <dlib/matrix.h>
 #include <dlib/svm_threaded.h>
 
 using namespace dlib;
-using namespace std;
 namespace py = pybind11;
 
 typedef matrix<double,0,1> dense_vect; 
@@ -277,9 +277,9 @@ struct segmenter_params
 };
 
 
-string segmenter_params__str__(const segmenter_params& p)
+std::string segmenter_params__str__(const segmenter_params& p)
 {
-    ostringstream sout;
+    std::ostringstream sout;
     if (p.use_BIO_model)
         sout << "BIO,";
     else
@@ -307,9 +307,9 @@ string segmenter_params__str__(const segmenter_params& p)
     return trim(sout.str());
 }
 
-string segmenter_params__repr__(const segmenter_params& p)
+std::string segmenter_params__repr__(const segmenter_params& p)
 {
-    ostringstream sout;
+    std::ostringstream sout;
     sout << "<";
     sout << segmenter_params__str__(p);
     sout << ">";
